// Code generated by Microsoft (R) AutoRest Code Generator 0.16.0.0
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.

namespace Fsmb.Apis.Ua.Clients.Models
{
    using System;
    using System.Linq;
    using System.Collections.Generic;
    using Newtonsoft.Json;
    using Microsoft.Rest;
    using Microsoft.Rest.Serialization;

    /// <summary>
    /// Exam
    /// </summary>
    public partial class Exam
    {
        /// <summary>
        /// Initializes a new instance of the Exam class.
        /// </summary>
        public Exam() { }

        /// <summary>
        /// Initializes a new instance of the Exam class.
        /// </summary>
        public Exam(string examType, string passFail, CodedDescription stateBoardDetail = default(CodedDescription), DateTime? examDate = default(DateTime?), int? numberOfAttempts = default(int?))
        {
            ExamType = examType;
            StateBoardDetail = stateBoardDetail;
            ExamDate = examDate;
            NumberOfAttempts = numberOfAttempts;
            PassFail = passFail;
        }

        /// <summary>
        /// Type of exam
        /// </summary>
        [JsonProperty(PropertyName = "examType")]
        public string ExamType { get; set; }

        /// <summary>
        /// State Code and State Board Description
        /// </summary>
        [JsonProperty(PropertyName = "stateBoardDetail")]
        public CodedDescription StateBoardDetail { get; set; }

        /// <summary>
        /// Exam date
        /// </summary>
        [JsonProperty(PropertyName = "examDate")]
        public DateTime? ExamDate { get; set; }

        /// <summary>
        /// Number of attempts
        /// </summary>
        [JsonProperty(PropertyName = "numberOfAttempts")]
        public int? NumberOfAttempts { get; set; }

        /// <summary>
        /// Pass/fail status (Pass, Fail, Unknown)
        /// </summary>
        [JsonProperty(PropertyName = "passFail")]
        public string PassFail { get; set; }

        /// <summary>
        /// Validate the object. Throws ValidationException if validation fails.
        /// </summary>
        public virtual void Validate()
        {
            if (ExamType == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "ExamType");
            }
            if (PassFail == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "PassFail");
            }
        }
    }
}
