// Code generated by Microsoft (R) AutoRest Code Generator 0.16.0.0
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.

namespace Fsmb.Api.Ua.Client.Models
{
    /// <summary>
    /// Activity information
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.0.22.0 (Newtonsoft.Json v11.0.0.0)")]
    public partial class Activity
    {        
        /// <summary>
        /// ID of the activity
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "id", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = false)]
        public string Id { get; set; }

        /// <summary>
        /// Type of activity
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "type", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = false)]
        public string Type { get; set; }

        /// <summary>
        /// Is in progress?
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "inProgress", Required = Newtonsoft.Json.Required.Always)]
        public bool InProgress { get; set; }

        /// <summary>
        /// Start date
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "beginDate", Required = Newtonsoft.Json.Required.Always)]
        public System.DateTime BeginDate { get; set; }

        /// <summary>
        /// End date
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "endDate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTime? EndDate { get; set; }

        /// <summary>
        /// Description
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "description", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = false)]
        public string Description { get; set; }

        /// <summary>
        /// Address lines
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "addressLines", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.IList<string> AddressLines { get; set; }

        /// <summary>
        /// City
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "city", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string City { get; set; }

        /// <summary>
        /// State/province
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "stateOrProvince", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StateOrProvince StateOrProvince { get; set; }

        /// <summary>
        /// Postal code
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "postalCode", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string PostalCode { get; set; }

        /// <summary>
        /// Position
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "position", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string Position { get; set; }

        /// <summary>
        /// Department
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "department", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string Department { get; set; }

        /// <summary>
        /// Was employee?
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "wasEmployed", Required = Newtonsoft.Json.Required.Always)]
        public bool WasEmployed { get; set; }

        /// <summary>
        /// Had staff privileges?
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "hadStaffPrivileges", Required = Newtonsoft.Json.Required.Always)]
        public bool HadStaffPrivileges { get; set; }

        /// <summary>
        /// Was affiliated?
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "wasAffiliated", Required = Newtonsoft.Json.Required.Always)]
        public bool WasAffiliated { get; set; }

        /// <summary>
        /// % clinical
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "percentageClinical", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public int? PercentageClinical { get; set; }

        /// <summary>
        /// % administrative
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "percentageAdministrative", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public int? PercentageAdministrative { get; set; }
    }
}
