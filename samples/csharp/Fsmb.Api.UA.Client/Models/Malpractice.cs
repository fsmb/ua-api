// Code generated by Microsoft (R) AutoRest Code Generator 0.16.0.0
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.

namespace Fsmb.Api.Ua.Client.Models
{
    /// <summary>
    /// Malpractice information
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.0.22.0 (Newtonsoft.Json v11.0.0.0)")]
    public partial class Malpractice
    {        
        /// <summary>
        /// State/province of malpractice
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "state", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required]
        public Region State { get; set; }

        /// <summary>
        /// Date of event
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "eventDate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTime EventDate { get; set; }

        /// <summary>
        /// Name of patient
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "patientName", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = false)]
        public string PatientName { get; set; }

        /// <summary>
        /// Name of court
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "courtName", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = false)]
        public string CourtName { get; set; }

        /// <summary>
        /// Case number
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "caseNumber", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string CaseNumber { get; set; }

        /// <summary>
        /// Role of practitioner in claim
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "role", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = false)]
        public string Role { get; set; }

        /// <summary>
        /// Date of lawsuit
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "lawsuitDate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTime LawsuitDate { get; set; }

        /// <summary>
        /// Status of claim
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "claimStatus", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = false)]
        public string ClaimStatus { get; set; }

        /// <summary>
        /// Name of insurance
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "insuranceName", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = false)]
        public string InsuranceName { get; set; }

        /// <summary>
        /// Amount of judgement
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "judgementAmount", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? JudgementAmount { get; set; }

        /// <summary>
        /// Behalf amount
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "behalfAmount", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? BehalfAmount { get; set; }

        /// <summary>
        /// Explanation
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "explanation", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = false)]
        public string Explanation { get; set; }
    }
}
